
@model Quimipac_.Models.MT_Contrato_Parametro

@{
    Layout = null;

    var listaTipo = ViewBag.listaTipo;

    var attributes = new Dictionary<string, object>();
    attributes.Add("Id", "FormEditarParametroContrato");
    attributes.Add("autocomplete", "off");

}



@*Pinta contorno txt Obligatorio*@
<link rel="stylesheet" href="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/css/contornoText.css">
<link rel="stylesheet" href="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/css/bootstrapValidator.min.css">

@using (Html.BeginForm("EditarParametro_Contrato", "Contrato", new { @id = string.Empty }, FormMethod.Post, new { @id = "modal1" }))
{
    @Html.AntiForgeryToken()
    <link rel="stylesheet" href="~/Content/bower_components/select2/dist/css/select2.css">

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id_Contrato_Parametro)
        @Html.HiddenFor(model => model.Id_Contrato)
        <div class="row">
            <div class="col-md-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Par&aacute;metro:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parametro, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Parametro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Descripci&oacute;n:</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", @type = "text", @rows = "2" })
            </div>
        </div>

        @*<div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Tipo Dato:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tipo_Dato, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Tipo_Dato, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label for="status" class="text-bold col-md-2 control-label">Tipo Dato:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Tipo_Dato, (SelectList)listaTipo, new { @class = "form-control select2", @style = "width: 100%", @id = "cmb_tipo" })
                @Html.ValidationMessageFor(model => model.Tipo_Dato, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            if (Model.Tipo_Dato == 147)
            {

                var vinumber = Convert.ToInt32(Model.Valor_Inicial);
                var vfnumber = Convert.ToInt32(Model.Valor_Final);

                <div class="form-group" id="formVinumber">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Inicial:</label>
                    <div class="col-md-10 divVI">
                        @Html.EditorFor(model => model.Valor_Inicial, new { htmlAttributes = new { @class = "form-control is-valid", @type = "number", @min = "0", @id = "txtObligatorio", @value = vinumber } })
                        @Html.ValidationMessageFor(model => model.Valor_Inicial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="formVfnumber">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Final:</label>
                    <div class="col-md-10 divVF">
                        @Html.EditorFor(model => model.Valor_Final, new { htmlAttributes = new { @class = "form-control is-valid", @type = "number", @min = "0", @id = "txtObligatorio", @value = vfnumber } })
                        @Html.ValidationMessageFor(model => model.Valor_Final, "", new { @class = "text-danger" })
                    </div>
                </div>

            }
            else if (Model.Tipo_Dato == 148)
            {
                var videcimal = Convert.ToDecimal(Model.Valor_Inicial);
                var vfdecimal = Convert.ToDecimal(Model.Valor_Final);

                <div class="form-group" id="formVidecimal">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Inicial:</label>
                    <div class="col-md-10 divVI">
                        @Html.EditorFor(model => model.Valor_Inicial, new { htmlAttributes = new { @class = "form-control is-valid", @type = "number", @min = "0", @step = "0.001", @id = "txtObligatorio", @value = videcimal } })
                        @Html.ValidationMessageFor(model => model.Valor_Inicial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="formVfdecimal">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Final:</label>
                    <div class="col-md-10 divVF">
                        @Html.EditorFor(model => model.Valor_Final, new { htmlAttributes = new { @class = "form-control is-valid", @type = "number", @min = "0", @step = "0.001", @id = "txtObligatorio", @value = vfdecimal } })
                        @Html.ValidationMessageFor(model => model.Valor_Final, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else if (Model.Tipo_Dato == 149)
            {
                var vistring = Convert.ToString(Model.Valor_Inicial);
                var vfstring = Convert.ToString(Model.Valor_Final);

                <div class="form-group" id="formVivarchar">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Inicial:</label>
                    <div class="col-md-10 divVI">
                        @Html.EditorFor(model => model.Valor_Inicial, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @id = "txtObligatorio", @value = vistring } })
                        @Html.ValidationMessageFor(model => model.Valor_Inicial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group"  id="formVfvarchar">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Final:</label>
                    <div class="col-md-10 divVF">
                        @Html.EditorFor(model => model.Valor_Final, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @id = "txtObligatorio", @value = vfstring } })
                        @Html.ValidationMessageFor(model => model.Valor_Final, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {

                var vidate = Convert.ToDateTime(Model.Valor_Inicial);
                var vfdate = Convert.ToDateTime(Model.Valor_Final);

                <div class="form-group" id="formVidatetime">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Inicial:</label>
                    <div class="col-md-10 divVI">
                        @Html.EditorFor(model => model.Valor_Inicial, new { htmlAttributes = new { @class = "form-control is-valid", @type = "date", @id = "txtObligatorio", @value = vidate } })
                        @Html.ValidationMessageFor(model => model.Valor_Inicial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="formVfdatetime">
                    <label for="recipient-name" class="col-md-2 control-label text-success">Valor Final:</label>
                    <div class="col-md-10 divVF">
                        @Html.EditorFor(model => model.Valor_Final, new { htmlAttributes = new { @class = "form-control is-valid", @type = "date", @id = "txtObligatorio", @value = vfdate } })
                        @Html.ValidationMessageFor(model => model.Valor_Final, "", new { @class = "text-danger" })
                    </div>
                </div>
                
            }



        }

        

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Estado:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Estado, new List<SelectListItem>() { new SelectListItem() { Value = "A", Text = "Activo", Selected = true }, new SelectListItem() { Value = "I", Text = "Inactivo", Selected = true } }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="Crear_MTPR btn btn-warning" />
            </div>
        </div>
    </div>

}

<!--cmbFiltro-->
<script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>
<script src="~/Content/bower_components/select2/dist/js/select2.full.min.js"></script>

<!--VaLIDATOR txt-->
<script src="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/js/bootstrapValidator.min.js"></script>
<script src="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/js/es_ES.min.js"></script>

<script type="text/javascript">
    //INICIO COMBOX FILTRO
    $(document).ready(function () {        //$('.select2').select2();
        $('.select2').select2({
            dropdownParent: $('#modal1')
        });
    });//FIN COMBOX FILTRO

    $('#modal1').bootstrapValidator({
        message: "Este valor no es valido",
        feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        }//,

        ////"text": {
        //    ".txtObligatorio": {
        //             validators: {     Empty: { message: "El nombre de usuario es requerido" },
        //                 stringLength: {
        //                     min: 3,
        //                     max: 5,
        //                     message: "El nombre de usuario debe tener entre 6 y 30 caracteres de logitud"
        //                 }
        //             }
        //    }
        ////}

    });

    $(document).ready(function () {
       
        $('#cmb_tipo').change(function (e) {
            //alert($("#cmb_tipo option:selected").val());
            if ($("#cmb_tipo option:selected").val() == 147) {

                //$('#formVinumber').css("display", "block");
                //$('#formVfnumber').css("display", "block");
                //$('#formVidecimal').css("display", "none");
                //$('#formVfdecimal').css("display", "none");
                //$('#formVivarchar').css("display", "none");
                //$('#formVfvarchar').css("display", "none");
                //$('#formVidatetime').css("display", "none");
                //$('#formVfdatetime').css("display", "none");

                $('.divVI').empty();
                $('.divVF').empty();
                $('.divVI').append("<input type = 'number' min = '0'  name = 'Valor_Inicial'  >");
                $('.divVF').append("<input type = 'number' min = '0'  name = 'Valor_Final'  >");
            }
            else if ($("#cmb_tipo option:selected").val() == 148) {

                //$('#formVinumber').css("display", "none");
                //$('#formVfnumber').css("display", "none");
                //$('#formVidecimal').css("display", "block");
                //$('#formVfdecimal').css("display", "block");
                //$('#formVivarchar').css("display", "none");
                //$('#formVfvarchar').css("display", "none");
                //$('#formVidatetime').css("display", "none");
                //$('#formVfdatetime').css("display", "none");
                $('.divVI').empty();
                $('.divVF').empty();
                $('.divVI').append("<input type = 'number' min = '0'  name = 'Valor_Inicial' step = '0.001' >");
                $('.divVF').append("<input type = 'number' min = '0'  name = 'Valor_Final' step = '0.001' >");
            }
            else if ($("#cmb_tipo option:selected").val() == 149) {
                //$('#formVinumber').css("display", "none");
                //$('#formVfnumber').css("display", "none");
                //$('#formVidecimal').css("display", "none");
                //$('#formVfdecimal').css("display", "none");
                //$('#formVivarchar').css("display", "block");
                //$('#formVfvarchar').css("display", "block");
                //$('#formVidatetime').css("display", "none");
                //$('#formVfdatetime').css("display", "none");
                $('.divVI').empty();
                $('.divVF').empty();
                $('.divVI').append("<input type = 'text'  name = 'Valor_Inicial'  >");
                $('.divVF').append("<input type = 'text'  name = 'Valor_Final' >");
            }

            else {
                //$('#formVinumber').css("display", "none");
                //$('#formVfnumber').css("display", "none");
                //$('#formVidecimal').css("display", "none");
                //$('#formVfdecimal').css("display", "none");
                //$('#formVivarchar').css("display", "none");
                //$('#formVfvarchar').css("display", "none");
                //$('#formVidatetime').css("display", "block");
                //$('#formVfdatetime').css("display", "block");
                $('.divVI').empty();
                $('.divVF').empty();
                $('.divVI').append("<input type = 'date'  name = 'Valor_Inicial'  >");
                $('.divVF').append("<input type = 'date'  name = 'Valor_Final' >");

            }

        });



    });



</script>

