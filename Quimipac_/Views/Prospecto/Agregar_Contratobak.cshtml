@model Quimipac_.Models.MT_Contrato

@{
    /**/

    Layout = null;

    var listaEstado = ViewBag.listaEstados;
    var listacliente = ViewBag.listacliente;
    var listaLinea = ViewBag.listaLinea;

    var attributes = new Dictionary<string, object>();
    attributes.Add("Id", "FormAgregarContrato");
    attributes.Add("autocomplete", "off");

}
<link rel="stylesheet" href="~/Content/bower_components/select2/dist/css/select2.css">
<link rel="stylesheet" href="~/Content/bower_components/datatables.net-bs/css/dataTables.bootstrap.css">

<link rel="stylesheet" href="~/Content/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">


@*Pinta contorno txt Obligatorio*@
<link rel="stylesheet" href="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/css/contornoText.css">
<link rel="stylesheet" href="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/css/bootstrapValidator.min.css">

@*@using (Html.BeginForm("Agregar_Contrato", "Contrato", FormMethod.Post, attributes))*@
@using (Html.BeginForm("Agregar_Contrato", "Contrato", new { @id = string.Empty }, FormMethod.Post, new { @id = "modal1" }))
{
    @Html.AntiForgeryToken()

    <link rel="stylesheet" href="~/Content/bower_components/select2/dist/css/select2.css">
    <link rel="stylesheet" href="~/Content/bower_components/datatables.net-bs/css/dataTables.bootstrap.css">

    <div class="form-horizontal">

        <div class="row">
            <div class="col-md-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label text-success">*&nbsp;C&oacute;digo Contrato Cliente:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo_Cliente, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                @Html.ValidationMessageFor(model => model.Codigo_Cliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label text-success">*&nbsp;C&oacute;digo Interno:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo_Interno, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                @Html.ValidationMessageFor(model => model.Codigo_Interno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label text-success">*&nbsp;Nombre Contrato:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Fecha Inicio:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha_Inicio, new { htmlAttributes = new { @class = "form-control is-valid", @id = "datepickerOpenA", @type = "text", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Fecha_Inicio, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Fecha Fin:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha_Fin, new { htmlAttributes = new { @class = "form-control is-valid", @id = "datepickerCloseA", @type = "text", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Fecha_Fin, "", new { @class = "text-danger" })

            </div>

        </div>


        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">Categoria:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Categoria, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="recipient-name" class="col-md-2 control-label">SubCategoria:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subcategoria, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                @Html.ValidationMessageFor(model => model.Subcategoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="status" class="text-bold col-md-2 control-label">Linea:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id_Linea, (SelectList)listaLinea, new { @class = "form-control select2", @style = "width: 100%" })
                @Html.ValidationMessageFor(model => model.Id_Linea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="status" class="text-bold col-md-2 control-label">Estado:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Estado, (SelectList)listaEstado, new { @class = "form-control select2", @style = "width: 100%" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="status" class="text-bold col-md-2 control-label">Nombre del Cliente:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id_Cliente, (SelectList)listacliente, new { @class = "form-control select2", @style = "width: 100%" })
                @Html.ValidationMessageFor(model => model.Id_Cliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button type="button" class="btn btn-warning" onclick="GuardarContrato(this)">Crear</button>@**@
            <input type="submit" id="btnSubmitAgregarPrecioReferencial" hidden="hidden" />
        </div>

    </div>

}


    @*COMBO FILTRABLE*@
    <script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="~/Content/bower_components/select2/dist/js/select2.full.min.js"></script>


    <script src="~/Content/bower_components/moment/min/moment.min.js"></script>

    <script src="~/Content/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Content/SweetAlert/sweet.js"></script>


    <!--VaLIDATOR txt-->
    <script src="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/js/bootstrapValidator.min.js"></script>
    @*<script src="~/Content/bower_components/FiltroDataTable/ValidaInputVQ/js/es_ES.min.js"></script>*@


    <script type="text/javascript">

          


        start = new Date(moment().subtract(6, 'days'));
        end = new Date(moment());

        $('#datepickerOpenA').val(moment(start).format('DD/MM/YYYY'))
        $('#datepickerCloseA').val(moment(end).format('DD/MM/YYYY'))

        $('#datepickerOpenA').datepicker(
            {
                format: "dd/mm/yyyy",
                autoclose: true
            });

        $('#datepickerCloseA').datepicker(
            {
                format: "dd/mm/yyyy",
                autoclose: true
            });


        function GuardarContrato(form) {
            var fecha_ap = $('#datepickerOpenA').val();
            var fecha_ci = $('#datepickerCloseA').val();

            var datearray1 = fecha_ap.split("/");
            var newdate_ap = datearray1[1] + '/' + datearray1[0] + '/' + datearray1[2];

            var datearray2 = fecha_ci.split("/");
            var newdate_ci = datearray2[1] + '/' + datearray2[0] + '/' + datearray2[2];

            var primera = Date.parse(newdate_ap);
            var segunda = Date.parse(newdate_ci);
            if (segunda < primera) {
                swal('', 'Fecha fin debe ser mayor que fecha inicio', 'error');
            }
            else {
                var obj = document.getElementById("btnSubmitAgregarPrecioReferencial");

                if (obj) {
                    obj.click();
                }
            }
        }
        //$(document).ready(function () {
        //    $('#input').attr("autocomplete", "off");
        //})

        $(document).ready(function () {

            //$("input[type='text']").attr("autocomplete", "off");
            //$(".alert").fadeTo(2000, 500).slideUp(500, function () {
            //    $(".alert").slideUp(500);
            //});

            //$('.select2').select2();

            $('.select2').select2({
                dropdownParent: $('#modal1')
            });



        })



        $('#modal1').bootstrapValidator({
            //    message:"Este valor no es valido",
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            }//,

            //fields: {
            //    txtObligatorio: {
            //             validators: {     Empty: { message: "El nombre de usuario es requerido" },
            //                 stringLength: {
            //                     min: 3,
            //                     max: 5,
            //                     message: "El nombre de usuario debe tener entre 6 y 30 caracteres de logitud"
            //                 }
            //             }
            //    }
            //}

        });


    </script>




