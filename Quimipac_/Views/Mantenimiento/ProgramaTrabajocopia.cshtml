@using Quimipac_.Repositorio;
@using Quimipac_.Models;
@model Quimipac_.Models.MT_ProgramaTrabajo
@{
    ViewBag.Title = "Programa Trabajo";
    //Layout = "~/Views/Shared/MainView.cshtml";
    Layout = "~/Views/Shared/_MainLayout.cshtml";

    List<sp_Quimipac_ConsultaMt_ProgramaTrabajo_Result> list = ViewBag.ProgramaTrabajo as List<sp_Quimipac_ConsultaMt_ProgramaTrabajo_Result>;


    var jsonHorarioEstudiante = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(list);

    var listaContrato = ViewBag.listaContrato;
    var listaTipoTrabajo = ViewBag.listaTipoTrabajo;
    var listaGrupoTrabajo = ViewBag.listaGrupoTrabajo;
   
    DataBase_Externo db = new DataBase_Externo();
    //var listaPrograma = db.ObtenerPrograma();

}
<link rel="stylesheet" href="~/Content/bower_components/fullcalendar/dist/fullcalendar.min.css">
<link rel="stylesheet" href="~/Content/bower_components/fullcalendar/dist/fullcalendar.print.min.css" media="print">
<link rel="stylesheet" href="~/Content/bower_components/FiltroDataTable/Notificaciones/css/v3.3.7/bootstrap.min.css">
<link rel="stylesheet" href="~/Content/bower_components/select2/dist/css/select2.css">

<title>Fronter | Programa Trabajo</title>

<section class="content-header">
    <h2 style="text-align:left">
        Programa Trabajo
    </h2>

    <ol class="breadcrumb">
        <li><a href="@Url.Action("MantTipoTrabajo", "Mantenimiento")"><i class="fa fa-link"></i>Home</a></li>
        <li class="active">Programa Trabajo</li>
    </ol>


    <br>
    @*<ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Calendar</li>
        </ol>*@
</section>



<section class="content">



    <div class="row">


        <div class="col-md-2">
            
        </div>

        <div class="col-md-8">
            <div class="box box-warning">
                <div class="box-body no-padding">


                    <div id="calendar" style="background-color:white">

                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-2">

        </div>

    </div>

    <!-- Button trigger modal -->
    @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
        Launch demo modal
    </button>*@

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @*<form action="">*@

    @using (Html.BeginForm("Agregar_ProgramaTrabajo", "Mantenimiento", new { @id = string.Empty }, FormMethod.Post, new { @id = "modal1" }))
    {
    @Html.AntiForgeryToken()


                    @*<label for="">Fecha:</label>
                    <input type="date" id="fecha">
                    <br/>
                    <label for="">Descripcion:</label>
                    <input type="text">
                    <br/>
                    <label for="">Direccion:</label>
                    <input type="text">
                    <br/>
                    <label for="">Ubicacion:</label>
                    <input type="text">
                    <br/>
                    <label for="">Fecha Inicio:</label>
                    <input type="date">
                    <br/>
                    <label for="">Fecha Fin:</label>
                    <input type="date">
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <input type="submit" class="btn btn-warning">
            @*<button id="btnAgregarTipoTrabajo" type="button" class="btn btn-warning" data-toggle="modal" data-target="#modalAgregarTipoTrabajo">Save changes</button>
            </form>
        </div>*@

        <div class="form-horizontal">

            <div class="row">
                <div class="col-md-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="status" class="text-bold col-md-2 control-label">Contrato:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Id_Contrato, (SelectList)listaContrato, new { @class = "form-control select2", @style = "width: 100%" })
                    @Html.ValidationMessageFor(model => model.Id_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>
            @*COMBO FILTRABLE CLIENTE*@
            <div class="form-group">
                <label for="status" class="text-bold col-md-2 control-label">Tipo Trabajo:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Id_TIpo_Trabajo, (SelectList)listaTipoTrabajo, new { @class = "form-control select2", @style = "width: 100%" })
                    @Html.ValidationMessageFor(model => model.Id_TIpo_Trabajo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="status" class="text-bold col-md-2 control-label">Grupo Trabajo:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Id_GrupoTrabajo, (SelectList)listaGrupoTrabajo, new { @class = "form-control select2", @style = "width: 100%" })
                    @Html.ValidationMessageFor(model => model.Id_GrupoTrabajo, "", new { @class = "text-danger" })
                </div>
            </div>
  

            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label text-success">Direccion:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    
                </div>
            </div>

            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label text-success">Ubicacion:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "form-control is-valid", @type = "text", @required = "required", @id = "txtObligatorio" } })
                    @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })

                </div>
            </div>


            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label">Descripci&oacute;n:</label>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", @type = "text", @rows = "5" })
                </div>
            </div>
            
            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label">Fecha Inicio:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_Ini, new { htmlAttributes = new { @class = "form-control is-valid", @id = "datepickerOpenA", @type = "text", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Fecha_Ini, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label">Fecha Fin:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_Fin, new { htmlAttributes = new { @class = "form-control is-valid", @id = "datepickerCloseA", @type = "text", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Fecha_Fin, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label">Fecha Registro:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_Registro, new { htmlAttributes = new { @class = "form-control is-valid", @id = "fecha", @type = "text", @required = "required"} })
                    @Html.ValidationMessageFor(model => model.Fecha_Registro, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <label for="recipient-name" class="col-md-2 control-label">Estado:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Estado, new SelectList(new List<string>() { "Activo", "Inactivo" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                <input type="submit" value="Crear" class="btn btn-warning" />
            </div>
        </div>

    }
                 
                </div>
               

                
            </div>
        </div>
    </div>



</section>

@section scripts {

    @*<script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>
        <script src="~/Content/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
        <script src="~/Content/bower_components/jquery-ui/jquery-ui.min.js"></script>

        <script src="~/Content/bower_components/jquery-slimscroll/jquery.slimscroll.min.js"></script>

        <script src="~/Content/bower_components/fastclick/lib/fastclick.js"></script>

        <script src="~/Content/dist/js/adminlte.min.js"></script>
        <script src="~/Content/dist/js/demo.js"></script>*@
<script src="~/Content/bower_components/select2/dist/js/select2.full.min.js"></script>


    <script src="~/Content/bower_components/moment/min/moment.min.js"></script>
<script src="~/Content/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>

    <script src="~/Content/bower_components/fullcalendar/dist/fullcalendar.min.js"></script>
    <script src="~/Content/bower_components/fullcalendar/dist/locale/es.js"></script>
    <script src="~/Content/SweetAlert/sweet.js"></script>


@*<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>


    <script type="text/javascript">

       // modalAdd('#btnAgregarTipoTrabajo', 'modal-agregaTipoTrabajo', '@Url.Action("Agregar_MantTipoTrabajo", "Mantenimiento")');


      
        

        start = new Date(moment().subtract(0, 'days'));
        end = new Date(moment());

        $('#datepickerOpenA').val(moment(start).format('DD/MM/YYYY'))
        $('#datepickerCloseA').val(moment(end).format('DD/MM/YYYY'))

        $('#datepickerOpenA').datepicker(
            {
                format: "dd/mm/yyyy",
                autoclose: true
            });

        $('#datepickerCloseA').datepicker(
            {
                format: "dd/mm/yyyy",
                autoclose: true
            });



     var data = [];
     var h = '';
     var k = '';
     var HI = '';
        var HF = '';


        $('.select2').select2({
            dropdownParent: $('#modal1')
        });

        var events = [];
        $.ajax({
            type: "GET",
            url: "GetEventsCalendar",
            success: function (data) {
                $.each(data, function (i, v) {
                    events.push({
                        title: v.Subject,
                        desciption: v.Description,
                        start: moment(v.start),
                        end: v.end != null ? moment(v.end) : null,
                        color: v.ThemeColor,
                        allDay: v.IsFullDay
                    });
                    
                })

                

            },
            error: function (error)
            {
                alert('failed');
            }

        })


     $(function ()
     {

            function init_events(ele) {
                ele.each(function () {


                    var eventObject = {
                        title: $.trim($(this).text()) // use the element's text as the event title
                    }


                    $(this).data('eventObject', eventObject)


                    $(this).draggable({
                        zIndex: 1070,
                        revert: true, // will cause the event to go back to its
                        revertDuration: 0  //  original position after the drag
                    })

                })
            }

            init_events($('#external-events div.external-event'))

            /* initialize the calendar
             -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()



            $.noConflict();
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                buttonText: {
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day'
                },
                //Random default events

                dayClick: function (date, jsEvent, view) {

                    $("#exampleModal").modal("show");
                    $("#fecha").val(date.format());
                    //date objeto de tipo moment
                    //alert(date.format());

                    //alert('Clicked en day click'); para q muestre una alerta normal pero como le envio por parametro date debe mostrarme la fecha y q se presente en alerta
                    //jsevent un objeto nativo de javascript almacena las coordenadas en lo q se ha hecho clic izquierdo

                    //$("#exampleModal").modal();
                        //alert('Clicked on: ' + date.format());

                        //('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);

                        //alert('Current view: ' + view.name); ///paraimprimir la vista el nombre de vista u puedo poner title titulo de la vista

                        // change the day's background color just for fun
                        //$(this).css('background-color', 'red');


                    }




            })

            /* ADDING EVENTS */
            var currColor = '#3c8dbc' //Red by default
            //Color chooser button
            var colorChooser = $('#color-chooser-btn')
            $('#color-chooser > li > a').click(function (e) {
                e.preventDefault()
                //Save color
                currColor = $(this).css('color')
                //Add color effect to button
                $('#add-new-event').css({ 'background-color': currColor, 'border-color': currColor })
            })
            $('#add-new-event').click(function (e) {
                e.preventDefault()
                //Get value and make sure it is not null
                var val = $('#new-event').val()
                if (val.length == 0) {
                    return
                }

                //Create events
                var event = $('<div />')
                event.css({
                    'background-color': currColor,
                    'border-color': currColor,
                    'color': '#fff'
                }).addClass('external-event')
                event.html(val)
                $('#external-events').prepend(event)

                //Add draggable funtionality
                init_events(event)

                //Remove event from text input
                $('#new-event').val('')
            })


        })
    </script>
}